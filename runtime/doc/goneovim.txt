*goneovim.txt*             A Neovim GUI written in Go, using a Qt binding for Go  

Author: akiyosi <akiyoshimaruyama@gmail.com>

================================================================================
CONTENTS                                                       *goneovim-contents*


Introduction                                             |goneovim-introduction|
CLI Interface                                           |goneovim-cli-interface|
Goneovim as a Neovim GUI                              |goneovim-as-a-neovim-gui|
Commands                                                     |goneovim-commands|
WSL integration                                                   |goneovim-wsl|
Configuration                                           |goneovim-configuration|

================================================================================
INTRODUCTION                                               *goneovim-introduction*

Goneovim is a Neovim GUI written in Go, using a Qt binding for Go. 
The project forked from the original Gonvim for the purpose of maintenance 
and enhancement.


================================================================================
CLI INTERFACE                                             *goneovim-cli-interface*
>
    Usage:
      goneovim [OPTIONS]
    
    Application Options:
          --geometry=     Initial window geomtry [e.g. --geometry=800x600]
          --server=       Remote session address [e.g. --server=host:3456]
          --ssh=          Attaching to a remote nvim via ssh. Default port is 22. [e.g. --ssh=user@host:port]
          --nvim=         Excutable nvim path to attach [e.g. --nvim=/path/to/nvim]
          --debug=        Run debug mode with debug.log(default) file [e.g. --debug=/path/to/my-debug.log]
          --fullscreen    Open the window in fullscreen on startup
          --maximized     Maximize the window on startup
          --exttabline    Externalize the tabline
          --extcmdline    Externalize the cmdline
          --extmessages   Externalize the messages. Sets --extcmdline implicitly
          --extpopupmenu  Externalize the popupmenu
          --version       Print Goneovim version
          --wsl=          Attach to nvim process in wsl environment with distribution(default) [e.g. --wsl=Ubuntu]
          --nofork        Run in foreground
    
    Help Options:
      -h, --help          Show this help message

<
================================================================================
Goneovim as a Neovim GUI                                *goneovim-as-a-neovim-gui*

'guifont' gfn'		string	(default is the value set in settings.toml)
			global
	This is a list of fonts which will be used for Goneovim. In its simplest
	form the value is just one font name.  When the font cannot be found you
	will get an error message.  To try other font names a list can be 
	specified, font names separated with commas. The first valid font is 
	used.

	Spaces after a comma are ignored.  To include a comma in a font name
	precede it with a backslash.  Setting an option requires an extra
	backslash before a space and a backslash.  See also
	|option-backslash|.  For example: >
	    :set guifont=Monaco:h20,JetBrainsMonoNL\ Nerd\ Font\ Mono:h14
<
	will make Vim try to use the font "Monaco" first, and if it fails it
	will try to use "JetBrainsMonoNL Nerd Font Mono".

        The following form will bring up a font requester, where you can pick
	the font you want: >
	    :set guifont=*
<
	- A '_' can be used in the place of a space, so you don't need to use
	  backslashes to escape the spaces.
	- Examples: >
	    :set guifont=Hack:h12:w5:b
	    :set guifont=Hack:h7:w4
<
	- takes these options in the font name:
		hXX - height is XX (points, can be floating-point)
		wXX - width is XX (points, can be floating-point)

		t        - thin
		el       - extra light
		l        - light
		n        - normal
		db, sb   - demi bold
		b        - bold
		eb       - extra bold

	  Use a ':' to separate the options.  For example: >
	    :set guifont=JetBrainsMonoNL_Nerd_Font_Mono:h14:t
<


'linespace' 'lsp'	number	(default 0)
			global
			{only in the GUI}
	Number of pixel lines inserted between characters.  Useful if the font
	uses the full character cell height, making lines touch each other.
	When non-zero there is room for underlining.
	With some fonts there can be too much room between lines (to have
	space for ascents and descents).  Then it makes sense to set
	'linespace' to a negative value.


'lines'			number
			global
	Number of lines of the Goneovim window.
	Setting this option will cause the window size to be changed. Minimum 
	value is 2, maximum value is 1000.


'columns' 'co'		number
			global
	Number of columns of the screen based of the Goneovim Window. 
	setting this option will cause the window size to be changed.
	Minimum value is 12, maximum value is 10000.


================================================================================
COMMANDS                                                       *goneovim-commands*


:GonvimResize {str}                                                *:GonvimResize*
	Resize the window to the size specified in str, where str is a string
	of width and height separated by the letter x, e.g. 800x600.


:GonvimSidebarShow                                            *:GonvimSidebarShow*
	Display the sidebar.


:GonvimSidebarToggle                                        *:GonvimSidebarToggle*
	Display the sidebar.


:GonvimVersion                                                    *:GonvimVersion*
	Displays the version number in the echo area.


:GonvimMiniMap                                                    *:GonvimMinimap*
        Toggles between showing and hiding the minimap.
	The colorscheme of minimap is detected based on the value returned by
	"echo &colorscheme".

:GonvimWorkspaceNew                                          *:GonvimWorkspaceNew*
	Start a new nvim instance in goneovim.


:GonvimWorkspaceNext                                        *:GonvimWorkspaceNext*
	Switch to a workspace with a higher number.


:GonvimWorkspacePrevious                                *:GonvimWorkspacePrevious*
	Switch to a workspace with one less number.


:GonvimWorkspaceSwitch {num}                              *:GonvimWorkspaceSwitch*
	Switches to the workspace with the specified number.


:GonvimGridFont {str}                                            *:GonvimGridFont*
	Specifies the font family and font size identified by the specified
	string in the font settings of the current |window|, independent of
	other |windows|. The string is in the form of a font family and font size
	separated by colons, e.g. "Fira Code:h20".

	This setting makes a window with its own font settings independent of
	Neovim's control and under the control of Goneovim.
	Goneovim will attempt to do the following for a window with
	independent font settings.

	For a splitted windows:
	Goneovim will attempt to resize as much as possible within the area
	bounded by the other windows.
	For example, in a simple vertical split, it will adjust the number of
	rows and columns while keeping the vertical height.

	  e.g.
	  Let X: normal window, and Y: window with its own font settings,
	  When a window is resized vertically, the overall vertical size is kept.
	  +--------+     +--------+    +--------+
	  |   X    |     |   X    |    |   X    |
	  |        |     +--------+    |        |
	  +--------+ =>  |        | => |        |
	  |   Y    |     |   Y    |    +--------+
	  |        |     |        |    |   Y    |
	  +--------+     +--------+    +--------+

	  The same applies to the left/right split.

	  +----+----+     +--+------+    +------+--+
	  | Y  | X  | =>  |Y | X    | => |  Y   |X |
	  |    |    |     |  |      |    |      |  |
	  +----+----+     +--+------+    +------+--+

	  But if you have a mix of vertical and horizontal splits, the length
	  will only be kept in the direction of the first split.

	  Let X,Z: normal window, and Y: window with its own font settings,
	  Each shall be split as follows.

	  +--------+     +--------+
	  |   X    |     |   X    |
	  |        |     |        |
	  +--------+ =>  +---+----+
	  |   Y    |     | Z | Y  |
	  |        |     |   |    |
	  +--------+     +---+----+

	  In this case, when the window is resized, the vertical length of Y
	  will be changed to keep the overall length, but the horizontal
	  length will remain the same.

	  +---------+                     +---------+
	  |    X    |                     |    X    |
	  |         |  Resize vertically  +----+----+
	  +----+----+         =>          |    |    |
	  |  Z | Y  |                     |  Z | Y  |
	  |    |    |                     |    |    |
	  +----+----+                     +----+----+

	  +---------+     +---------+        +---------+
	  |    X    |     |    X    |        |    X    |
	  |         |     |         |        |         |
	  |         | =>  |         |     => |         |
	  +----+----+     +-------+----+     +--+----+-+
	  |  Z | Y  |     |  Z    | Y  |     |Z | Y  |  
	  +----+----+     +-------+----+     +--+----+  


	In the case of an external window:
	  In the external window, the number of rows and columns is controlled
	  to fit the size of the external window.


:GonvimLetterSpacing {num}                                  *:GonvimLetterSpacing*
	Set the letterspace. Note that Ligature will be disabled when this 
	command is executed. Also, due to the timing of the definition of this
	command, it is not possible to include the settings in init.vim. 
	If you want to load the settings at startup, you can enable the settings
	in settings.toml, or if you want to put the settings in |init.vim|, 
	you can use the following |rpcnotify|.
>
	:call rpcnotify(0, "Gui", "gonvim_letter_spacing", 0.5)
<

:GuiMacmeta {boolean}                                               *:GuiMacmeta*
	Use option (alt) as meta key.  When on, option-key presses are not
	interpreted, thus enabling bindings to <M-..>.  When off, option-key
	presses are interpreted by the selected input method and inserted as
	text.


:GonvimMaximize [0|1]                                           *:GonvimMaximize*
	Maximize the window size.
	If an argument is specified, a value of 0 exits maximization, and a
	value of 1 maximizes the window.


:GonvimFullscreen [0|1]                                       *:GonvimFullscreen*
	 Window to full screen.
	 If an argument is specified, a value of 0 exits full screen and a
	 value of 1 makes the window full screen.

:GonvimWinpos {x} {y}                                             *:GonvimWinpos*
	Move main Goneovim window so that upper left corner is at screen 
	coordinate x,y.

:GonvimLigatures                                               *:GonvimLigatures*
	Toggles the ligature settings.


:GonvimSmoothScroll                                         *:GonvimSmoothScroll*
	Toggles scrolling by Vim commands (e.g. <C-f>) to a mode that displays
	a smooth animation.
	Note that enabling this smooth scrolling will increase the memory
	usage of the application.


:GonvimSmoothCursor                                         *:GonvimSmoothCursor*
	Displays smooth animation of the cursor movement.


:GonvimIndentguide                                           *:GonvimIndentguide*
	Toggles the display of the indentation guide.


================================================================================
WSL integration                                                     *goneovim-wsl*

On Windows, goenovim can use nvim as a backend within the WSL2 environment.
To use this feature, all that is required is that neovim can be executed on the
shell program specified by `$SHELL` in the WSL2 environment with just the executable
binary name "nvim". You can simply check if nvim can be run by the following 
command at a Windows command prompt.
>
    wsl $SHELL -lc nvim
<
For example, in bash, in order to run neovim with just `nvim` command, you need
to add the absolute path of the directory where `nvim` execution binary to the
environment variable `$PATH` in `/etc/profile` or `~/.bash_profile`, which is configuration
file that is read when the shell program is executed as a login shell. For more
information about login shells, see `man bash`, etc.

================================================================================
CONFIGURATION                                             *goneovim-configuration*

Goneovim’s config file is located at

>
        $XDG_CONFIG_HOME/goneovim/settings.toml
<

All Options are follows:

 
>
        ## Goneovim settings.toml
        ## All of the following commented configuration items have default values.
        
        [Editor]
        ## Makes the application window frameless.
        # BorderlessWindow = false

        ## Controls whether the title bar is displayed when the borderless 
	## window setting is enabled.
	# HideTitlebar = false
        
        ## Editor minimum window width (>= 400)
        # Width = 800
        ## Editor minimum window height (>= 300)
        # Height = 600
        ## Margin adds a margin between the window and the drawn content.
        ## This value is 0 by default for Linux and 2 by default for MacOS and Windows.
        # Margin = 0
        ## Gap create a gap on the left and right sides of the application window.
        # Gap = 0
        
        ## Reverses the direction of scrolling with the mouse wheel.
        # ReversingScrollDirection = false
        
        ## Specifies the amount of scrolling by the mouse wheel. The default value is 1.
        # LineToScroll = 1
        
        ## This option makes the whole GUI window in semi-transparent.
        ## This setting also implicitly enables the Drawborder setting
        # Transparent = 1.0
        
        ## Launch goneovim with full screen window size.
        # StartFullscreen = false
        ## Launch goneovim with maximized window size.
        # StartMaximizedWindow = false

        ## Enabling WindowGeometryBasedOnFontmetrics sets the minimum unit of window geometry change 
        ## to the width and height values specified by font metrics.
        ## When enabled, maximization with the GonvimMaximize command may not work well due to 
        ## the combination of screen size and font metrics.
        # WindowGeometryBasedOnFontmetrics = false

        ## Enable the ability to remember the last window geometry that was displayed
        ## and restore it at the next startup.
        RestoreWindowGeometry = false
        
        ## Editor external font-family, font-siz.
        ## This is the font settings of the graphical UI as an nvim front end.
        ## Fontfamily is
        ## In MacOS, 
        # FontFamily = "Monaco"
        ## In Linux
        # FontFamily = "Consolas"
        ## In Windows
        # FontFamily = "Windows"
        ## Fontsize is
        # FontSize = 12
        ## letterspace is
        # Letterspace = 0
        
        ## Neovim external UI features
        ## The following is the default value of goneovim.
        ## You can change the behavior of the GUI by changing the following boolean values.
        ## If you prefer the traditional Vim UI, set it to false for all.
        ## Also, `ExtMessages` is still experimental at this time and we don't recommend setting it to true if you want stability.
        # ExtCmdline   = false
        # ExtPopupmenu = false
        # ExtTabline   = false
        # ExtMessages  = false
        
        ## Goneovim has a cached rendering feature enabled to speed up the process.
        ## If you want to disable it, set it to false
        # CachedDrawing = true
        ## You can specify the cache size to be used by the cache rendering feature of goneovim.
        ## The default is 400.
        # CacheSize = 400
        
        ## Disables font ligatures.
        # DisableLigatures = true
        
        ## Copy yanked text to clipboard
        # Clipboard = true
        
        ## This setting is equivalent to Macmeta in MacVim.
        # Macmeta = false
        
        ## The input method editor will be automatically disabled when the mode is changed to normal mode.
        ## It may be useful for users who use the input method editor (e.g. East Asian users).
        ## This option is depricated. Use `ModeEnablingIME`
        # DisableImeInNormal = false

        ## This option specifies a list of modes in which the IME is to be enabled, and goneovim will enable
        ## the IME only in those modes.
        ## It may be useful for users who use the input method editor (e.g. East Asian users).
        ## e.g. 
        ## ModeEnablingIME = ["insert", "cmdline_normal"]
        ## The available mode strings:
        ##   "normal", "insert", "replace", "visual", "visual_select",
        ##    "cmdline_normal", "cmdline_insert", "cmdline_replace", etc.
        # ModeEnablingIME = []
        
        ## Draw borders on the GUI side instead of the vertical border and status line that nvim draws.
        # DrawWindowSeparator = false
        # WindowSeparatorTheme = "dark"
        # WindowSeparatorColor = "#2222ff"
        # WindowSeparatorGradient = false
        
        ## Draw built-in indent guide
        ## Enabling this setting will have a slight impact on performance.
        # IndentGuide = false
        # IndentGuideIgnoreFtList = ["md"]
        # OptionsToUseGuideWidth = "tabstop"
        
        ## Animates the scrolling behavior of Neovim when the scroll command is entered.
        # SmoothScroll = false
        ## Specifies the speed of animation in smooth scrolling.
        # SmoothScrollDuration = 300
        ## Disables horizontal scrolling for smooth scrolling with the touchpad.
        # DisableHorizontalScroll = true
        
        ## Draw border on a float window
        # DrawBorderForFloatWindow = false
        
        ## Draw shadow under a float window
        # DrawShadowForFloatWindow = false
        
        ## Enable desktop notification settings for nvim messages.
        ## This option works only if `ExtMessages` is enabled.
        # DesktopNotifications = false
        
        ## Controls whether mouse events in Neovim are ignored when
        ## an application window is clicked while the application window is inactive.
        # IgnoreFirstMouseClickWhenAppInactivated = false

        # Display the effect when clicked
        # ClickEffect = false

        ## Specifies the command used to open the file in an external file explorer, etc. The default is ":e".
        # FileOpenCmd = ":e"
        
        # Pattern that fills the diff background
        # Change the background pattern used for diff display.
        # This option allows you to use a visual effect pattern such as Dense, Diagonal Stripe instead of a regular solid pattern.
        # The available patterns are all Qt brush styles. For more information, See: https://doc.qt.io/qt-5/qbrush.html#details
        # // -- diffpattern enum --
        # // SolidPattern             1
        # // Dense1Pattern            2
        # // Dense2Pattern            3
        # // Dense3Pattern            4
        # // Dense4Pattern            5
        # // Dense5Pattern            6
        # // Dense6Pattern            7
        # // Dense7Pattern            8
        # // HorPattern               9
        # // VerPattern               10
        # // CrossPattern             11
        # // BDiagPattern             12
        # // FDiagPattern             13
        # // DiagCrossPattern         14
        # // LinearGradientPattern    15
        # // RadialGradientPattern    16
        # // ConicalGradientPattern   17
        # // TexturePattern           24
        # DiffAddPattern    = 1
        # DiffDeletePattern = 1
        # DiffChangePattern = 1
        
        ## Extra Dock menu option in MacOS
        ## You can add a menu with your own command options 
        # [Editor.DockmenuActions]
        # hoge = "-u NONE"
        # fuga = "-u NORC"

        ## You can write a vimscript to be executed after goneovim starts,
        ## for example to disable the vimscript that Goneovim has embedded internally.
        ## GinitVim = '''
        ##  let g:hoge = 'fuga'
        ## '''
        # Ginitvim = ""
        
        
        [Cursor]
        ## Specifies whether the smooth cursor feature is enabled or disabled by a boolean value.
        # SmoothMove = false
        
        ## Specifies the duration of the animation at the smooth cursor. Default is 55ms.
        ## Note that Goneovim uses the specified value as a base value and makes slight adjustments depending on the distance.
        # Duration = 55
        
        
        ## The palette is used as an input UI for externalized command lines and the Fuzzy-Finder feature built into Goneovim.
        [Palette]
        ## Specifies the proportion of the command line palette to the height of the entire window.
        # AreaRatio = 0.5
        ## Specifies the number of items to be displayed in the command line palette.
        # MaxNumberOfResultItems = 30
        ## Specifies the opacity of the command line palette.
        # Transparent = 1.0
        
        
        ## Configure externalized message UI.
        [Message]
        ## Specifies the opacity of the message window.
        # Transparent = 1.0
        
        
        ## The statusline configuration below relates to the display of Goenovim's own external status lines.
        ## If you want to use neovim's status line plugin, you should disable its display.
        # [Statusline]
        ## Whether or not to display the external status line
        # Visible = false
        
        ## Options: "textLabel" / "icon" / "background" / "none"
        # ModeIndicatorType = "textLabel"
        
        ## Optional setting colors per Neovim editing modes
        # NormalModeColor = "#3cabeb"
        # CommandModeColor = "#5285b8"
        # InsertModeColor = "#2abcb4"
        # ReplaceModeColor = "#ff8c0a"
        # VisualModeColor = "#9932cc"
        # TerminalModeColor = "#778899"
        
        ## Statusline components
        # Left = [ "mode", "filepath", "filename" ]
        # Right = [ "message", "git", "filetype", "fileformat", "fileencoding", "curpos", "lint" ]
        
        
        ## Configure externalized tabline UI.
        [Tabline]
        ## Whether or not to display the external tabline
        # Visible = true
        # ShowIcon = true
        
        
        ## Configure externalized popupmenu UI.
        [Popupmenu]
        ## neovim's popupmenu is made up of word, menu and info parts.
        ## Each of these parts will display the following information.
        ##   word:   the text that will be inserted, mandatory
        ##   menu:   extra text for the popup menu, displayed after "word"
        ##   info:   more information about the item, can be displayed in a preview window
        ## The following options specify whether to display a dedicated column in the popupmenu
        ## to display the long text displayed in the `info` part.
        # ShowDetail = true
         
        ## total number to display item
        # Total = 20
         
        ## width of `menu` column
        # MenuWidth = 400
         
        ## width of `info` column
        # InfoWidth = 1
         
        ## width of `detail` column
        # DetailWidth = 250
         
        ## Show digit number which can select item for popupmenu
        # ShowDigit = true
        
        
        [ScrollBar]
        ## Specifies whether to show the external scrollbar or not.
        # Visible = false
        
        
        [MiniMap]
        ## To view the minimap, launch an additional nvim instance;
        ## setting Disable to true will not launch this additional nvim instance
        ## and will completely disable the minimap feature.
        # Disable = false
        
        ## Specifies whether to show the minimap or not.
        # Visible = false
        
        ## Specifies the width of the minimap.
        # Width = 100
        
        
        ## Configure the markdown preview feature
        [Markdown]
        # Disable = false
        
        ## Specifying code highlighting styles
        # CodeHlStyle = "github"
        
        
        [SideBar]
        ## Specifies whether to show the external sidebar or not.
        # Visible = false
        
        ## Specify the sidebar width
        # Width = 200
        
        ## Specify whether or not to draw a shadow under the sidebar.
        # DropShadow = false
        
        ## Specify the color to use when selecting items in the sidebar or palette in hexadecimal format
        # AccentColor = "#5596ea"
        
        
        [FileExplore]
        ## Specify the maximum number of items to be displayed in the file explorer.
        # MaxDisplayItems = 30
        
        
        [Workspace]
        ## This setting sets the format of the path string of CWD in the sidebar.
        ##  name: directoryname
        ##  full: /path/to/directoryname
        ##  minimum: /p/t/directoryname
        # PathStyle = "minimum"
        
        ## Specifies whether the last exited session should be restored at the next startup.
        # RestoreSession = false
<


vim:tw=78:ts=8:ft=help:norl:
